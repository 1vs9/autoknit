TODO List + Notes
=================

Slice passing is starting to actually work pretty well.

ak-build_next_active_chains will assert() in append_ev when there is a loop with exactly one stitch.
 --> Not fixing, because earlier code should *not* allow this situation to arise (really broken)

ak-peel_slice will sometimes create a disconnected next chain (one that doesn't contain a time function maximum)
 --> Should fix by checking that each next chain contains a bind-off location [time function maximum, I guess? could also just tag edges]
  This will require some changes to level_chains, as well as the time fn being passed to peel_slice.

Need to implement: "if a next course intersects a boundary, the whole boundary is accepted"
(or we could do something better, but this version would actually avoid a lot of special cases ... albeit special cases that are getting handled properly at the moment)
(something better might be: add boundary between intersections and active courses)

Balancing still required in ak-link.

DTW nice-to-have in ak-link.

In the scheduling code:
 - the special-typed 'Start' / 'End' stitches basically require knitting not to end at a short row (i.e., I need to add code that hacks ending cycles onto everything)
 - some sort of offset-determination for cycles is needed
 - should consider using real xfer cost


Linking:
 - how to filter portions of a cycle that don't link to anything? Possibly by adding to adjacent segments?
 - how to balance?
   - First: balance *checking* code
   - Next: Appendix A's local fixup
